version: '3.8'
services:
  flask_app:
    build:
      context: ./server
    container_name: flask_app
    ports:
      - "5000:5000"
    networks:
      - my-attack-net
    restart: always

  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - flask_app
    networks:
      - my-attack-net
  
  client1:
    build:
     context: ./client
    networks:
      my-attack-net:
        ipv4_address: 192.168.100.5
    container_name: client1_container
    restart: unless-stopped

  ddos_attacker1:
    build:
     context: ./bot
    networks:
      my-attack-net:
        ipv4_address: 192.168.100.11
    container_name: ddos_attack1_container
    restart: unless-stopped

  ddos_attacker2:
    build:
     context: ./bot
    networks:
      my-attack-net:
        ipv4_address: 192.168.100.12
    container_name: ddos_attack2_container
    restart: unless-stopped

  ddos_attacker3:
    build:
     context: ./bot
    networks:
      my-attack-net:
        ipv4_address: 192.168.100.13
    container_name: ddos_attack3_container
    restart: unless-stopped

networks:
  my-attack-net:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.100.0/24
